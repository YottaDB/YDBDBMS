#################################################################
#								#
# Copyright (c) 2019 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture names.sql
  load_fixture names.zwr
}

@test "get oids" {
  octo <<OCTO &> output.txt
SELECT t.typlen
FROM pg_catalog.pg_type t, pg_catalog.pg_namespace n
WHERE t.typnamespace=n.oid AND t.typname='name' AND n.nspname='pg_catalog'
OCTO
  [[ "$(grep -c "ERROR" output.txt)" == "0" ]]
}

@test "get relkind" {
  ## TODO: this is actually really hard because we make a reference to a table
  ##  out of scope in the subquery; for now, skip it
  skip
  octo <<OCTO &> output.txt
SELECT t.typname,t.oid
FROM pg_catalog.pg_type t
  JOIN pg_catalog.pg_namespace n
  ON (t.typnamespace = n.oid)
WHERE n.nspname  != 'pg_toast'
  AND (t.typrelid = 0 OR
    (SELECT c.relkind = 'c' FROM pg_catalog.pg_class c WHERE c.oid = t.typrelid))
OCTO
  [[ "$(grep -c "ERROR" output.txt)" == "0" ]]
}

@test "get tables" {
  octo <<OCTO &> output.txt
SELECT
  NULL AS TABLE_CAT,
  n.nspname AS TABLE_SCHEM,
  c.relname AS TABLE_NAME,
  CASE n.nspname ~ '^pg_'
  OR n.nspname = 'information_schema' WHEN true THEN CASE WHEN n.nspname = 'pg_catalog'
  OR n.nspname = 'information_schema' THEN CASE c.relkind WHEN 'r' THEN 'SYSTEM TABLE' WHEN 'v' THEN 'SYSTEM VIEW' WHEN 'i' THEN 'SYSTEM INDEX' ELSE NULL END WHEN n.nspname = 'pg_toast' THEN CASE c.relkind WHEN 'r' THEN 'SYSTEM TOAST TABLE' WHEN 'i' THEN 'SYSTEM TOAST INDEX' ELSE NULL END ELSE CASE c.relkind WHEN 'r' THEN 'TEMPORARY TABLE' WHEN 'p' THEN 'TEMPORARY TABLE' WHEN 'i' THEN 'TEMPORARY INDEX' WHEN 'S' THEN 'TEMPORARY SEQUENCE' WHEN 'v' THEN 'TEMPORARY VIEW' ELSE NULL END END WHEN false THEN CASE c.relkind WHEN 'r' THEN 'TABLE' WHEN 'p' THEN 'TABLE' WHEN 'i' THEN 'INDEX' WHEN 'S' THEN 'SEQUENCE' WHEN 'v' THEN 'VIEW' WHEN 'c' THEN 'TYPE' WHEN 'f' THEN 'FOREIGN TABLE' WHEN 'm' THEN 'MATERIALIZED VIEW' ELSE NULL END ELSE NULL END AS TABLE_TYPE,
  d.description AS REMARKS,
  '' as TYPE_CAT,
  '' as TYPE_SCHEM,
  '' as TYPE_NAME,
  '' AS SELF_REFERENCING_COL_NAME,
  '' AS REF_GENERATION
FROM
  pg_catalog.pg_namespace n,
  pg_catalog.pg_class c
  LEFT JOIN pg_catalog.pg_description d ON (
    c.oid = d.objoid
    AND d.objsubid = 0
  )
  LEFT JOIN pg_catalog.pg_class dc ON (
    d.classoid = dc.oid
    AND dc.relname = 'pg_class'
  )
  LEFT JOIN pg_catalog.pg_namespace dn ON (
    dn.oid = dc.relnamespace
    AND dn.nspname = 'pg_catalog'
  )
WHERE
  c.relnamespace = n.oid
  AND (
    false
    OR (
      c.relkind IN ('r', 'p')
      AND n.nspname ! ~ '^pg_'
      AND n.nspname <> 'information_schema'
    )
    OR (
      c.relkind = 'r'
      AND (
        n.nspname = 'pg_catalog'
        OR n.nspname = 'information_schema'
      )
    )
    OR (
      c.relkind = 'v'
      AND n.nspname <> 'pg_catalog'
      AND n.nspname <> 'information_schema'
    )
  )
ORDER BY
  TABLE_TYPE,
  TABLE_SCHEM,
  TABLE_NAME
OCTO
  [[ "$(grep -c "ERROR" output.txt)" == "0" ]]
}

@test "test1" {
  octo <<OCTO &> output.txt
 SELECT NULL          AS TABLE_CAT,
       n.nspname     AS TABLE_SCHEM,
       c.relname     AS TABLE_NAME,
       CASE n.nspname ~ '^pg_'
             OR n.nspname = 'information_schema'
         WHEN true THEN
           CASE
             WHEN n.nspname = 'pg_catalog'
                   OR n.nspname = 'information_schema' THEN
               CASE c.relkind
                 WHEN 'r' THEN 'SYSTEM TABLE'
                 WHEN 'v' THEN 'SYSTEM VIEW'
                 WHEN 'i' THEN 'SYSTEM INDEX'
                 ELSE NULL
               end
             WHEN n.nspname = 'pg_toast' THEN
               CASE c.relkind
                 WHEN 'r' THEN 'SYSTEM TOAST TABLE'
                 WHEN 'i' THEN 'SYSTEM TOAST INDEX'
                 ELSE NULL
               end
             ELSE
               CASE c.relkind
                 WHEN 'r' THEN 'TEMPORARY TABLE'
                 WHEN 'p' THEN 'TEMPORARY TABLE'
                 WHEN 'i' THEN 'TEMPORARY INDEX'
                 WHEN 'S' THEN 'TEMPORARY SEQUENCE'
                 WHEN 'v' THEN 'TEMPORARY VIEW'
                 ELSE NULL
               end
           end
         WHEN false THEN
           CASE c.relkind
             WHEN 'r' THEN 'TABLE'
             WHEN 'p' THEN 'TABLE'
             WHEN 'i' THEN 'INDEX'
             WHEN 'S' THEN 'SEQUENCE'
             WHEN 'v' THEN 'VIEW'
             WHEN 'c' THEN 'TYPE'
             WHEN 'f' THEN 'FOREIGN TABLE'
             WHEN 'm' THEN 'MATERIALIZED VIEW'
             ELSE NULL
           end
         ELSE NULL
       end           AS TABLE_TYPE,
       d.description AS REMARKS,
       ''            AS TYPE_CAT,
       ''            AS TYPE_SCHEM,
       ''            AS TYPE_NAME,
       ''            AS SELF_REFERENCING_COL_NAME,
       ''            AS REF_GENERATION
FROM   pg_catalog.pg_namespace n,
       pg_catalog.pg_class c
       LEFT JOIN pg_catalog.pg_description d
              ON ( c.oid = d.objoid
                   AND d.objsubid = 0 )
       LEFT JOIN pg_catalog.pg_class dc
              ON ( d.classoid = dc.oid
                   AND dc.relname = 'pg_class' )
       LEFT JOIN pg_catalog.pg_namespace dn
              ON ( dn.oid = dc.relnamespace
                   AND dn.nspname = 'pg_catalog' )
WHERE  c.relnamespace = n.oid
       AND c.relname LIKE '%'
       AND ( false
              OR ( c.relkind IN ( 'r', 'p' )
                   AND n.nspname !~ '^pg_'
                   AND n.nspname <> 'information_schema' )
              OR ( c.relkind = 'r'
                   AND ( n.nspname = 'pg_catalog'
                          OR n.nspname = 'information_schema' ) )
              OR ( c.relkind = 'v'
                   AND n.nspname <> 'pg_catalog'
                   AND n.nspname <> 'information_schema' ) )
ORDER  BY table_type,
          table_schem,
          table_name
OCTO
  [[ "$(grep -c "ERROR" output.txt)" == "0" ]]
}

@test "test2" {
  octo <<OCTO &> output.txt
 SELECT NULL          AS PROCEDURE_CAT,
       n.nspname     AS PROCEDURE_SCHEM,
       p.proname     AS PROCEDURE_NAME,
       NULL,
       NULL,
       NULL,
       d.description AS REMARKS,
       2             AS PROCEDURE_TYPE,
       p.proname
       || '_'
       || p.oid      AS SPECIFIC_NAME
FROM   pg_catalog.pg_namespace n,
       pg_catalog.pg_proc p
       left join pg_catalog.pg_description d
              ON ( p.oid = d.objoid )
       left join pg_catalog.pg_class c
              ON ( d.classoid = c.oid
                   AND c.relname = 'pg_proc' )
       left join pg_catalog.pg_namespace pn
              ON ( c.relnamespace = pn.oid
                   AND pn.nspname = 'pg_catalog' )
WHERE  p.pronamespace = n.oid
ORDER  BY procedure_schem,
          procedure_name,
          p.oid :: text
OCTO
  [[ "$(grep -c "ERROR" output.txt)" == "0" ]]
}

@test "test3" {
  octo <<OCTO &> output.txt
 SELECT NULL                                         AS type_cat,
       n.nspname                                    AS type_schem,
       t.typname                                    AS type_name,
       NULL                                         AS class_name,
       CASE
         WHEN t.typtype = 'c' THEN 2002
         ELSE 2001
       END                                          AS data_type,
       pg_catalog.Obj_description(t.oid, 'pg_type') AS remarks,
       CASE
         WHEN t.typtype = 'd' THEN (SELECT CASE
                                             WHEN typname = 'date' THEN 91
                                             WHEN typname = 'time[]' THEN 2003
                                             WHEN typname = '_name' THEN 2003
                                             WHEN typname = 'numeric[]' THEN
                                             2003
                                             WHEN typname = 'timestamptz[]' THEN
                                             2003
                                             WHEN typname = 'refcursor' THEN
                                             2012
                                             WHEN typname = 'timetz[]' THEN 2003
                                             WHEN typname = 'money[]' THEN 2003
                                             WHEN typname = 'bit' THEN -7
                                             WHEN typname = 'uuid' THEN 1111
                                             WHEN typname = '_money' THEN 2003
                                             WHEN typname = 'int2' THEN 5
                                             WHEN typname = 'name[]' THEN 2003
                                             WHEN typname = 'int4' THEN 4
                                             WHEN typname = '_varchar' THEN 2003
                                             WHEN typname = 'uuid[]' THEN 2003
                                             WHEN typname = 'xml' THEN 2009
                                             WHEN typname = 'int8' THEN -5
                                             WHEN typname = 'text' THEN 12
                                             WHEN typname = '_numeric' THEN 2003
                                             WHEN typname = '_timestamp' THEN
                                             2003
                                             WHEN typname = 'json[]' THEN 2003
                                             WHEN typname = '_bool' THEN 2003
                                             WHEN typname = 'date[]' THEN 2003
                                             WHEN typname = 'varchar[]' THEN
                                             2003
                                             WHEN typname = '_oid' THEN 2003
                                             WHEN typname = '_json' THEN 2003
                                             WHEN typname = 'int2[]' THEN 2003
                                             WHEN typname = 'int4[]' THEN 2003
                                             WHEN typname = 'bpchar' THEN 1
                                             WHEN typname = 'name' THEN 12
                                             WHEN typname = 'bit[]' THEN 2003
                                             WHEN typname = 'int8[]' THEN 2003
                                             WHEN typname = 'timestamptz' THEN
                                             93
                                             WHEN typname = 'refcursor[]' THEN
                                             2003
                                             WHEN typname = '_bpchar' THEN 2003
                                             WHEN typname = 'bpchar[]' THEN 2003
                                             WHEN typname = 'bytea' THEN -2
                                             WHEN typname = 'bool' THEN -7
                                             WHEN typname = 'bool[]' THEN 2003
                                             WHEN typname = '_refcursor' THEN
                                             2003
                                             WHEN typname = 'numeric' THEN 2
                                             WHEN typname = 'oid' THEN -5
                                             WHEN typname = 'point' THEN 1111
                                             WHEN typname = '_timestamptz' THEN
                                             2003
                                             WHEN typname = '_float4' THEN 2003
                                             WHEN typname = 'bytea[]' THEN 2003
                                             WHEN typname = 'json' THEN 1111
                                             WHEN typname = 'timestamp[]' THEN
                                             2003
                                             WHEN typname = '_char' THEN 2003
                                             WHEN typname = '_time' THEN 2003
                                             WHEN typname = '_float8' THEN 2003
                                             WHEN typname = 'timestamp' THEN 93
                                             WHEN typname = '_bytea' THEN 2003
                                             WHEN typname = 'oid[]' THEN 2003
                                             WHEN typname = '_bit' THEN 2003
                                             WHEN typname = '_int8' THEN 2003
                                             WHEN typname = '_date' THEN 2003
                                             WHEN typname = 'varchar' THEN 12
                                             WHEN typname = '_int4' THEN 2003
                                             WHEN typname = 'float8' THEN 8
                                             WHEN typname = '_point' THEN 2003
                                             WHEN typname = '_uuid' THEN 2003
                                             WHEN typname = 'float4' THEN 7
                                             WHEN typname = 'point[]' THEN 2003
                                             WHEN typname = '_int2' THEN 2003
                                             WHEN typname = '_timetz' THEN 2003
                                             WHEN typname = 'char[]' THEN 2003
                                             WHEN typname = 'float8[]' THEN 2003
                                             WHEN typname = 'money' THEN 8
                                             WHEN typname = '_xml' THEN 2003
                                             WHEN typname = 'float4[]' THEN 2003
                                             WHEN typname = 'text[]' THEN 2003
                                             WHEN typname = 'xml[]' THEN 2003
                                             WHEN typname = 'char' THEN 1
                                             WHEN typname = 'time' THEN 92
                                             WHEN typname = '_text' THEN 2003
                                             WHEN typname = 'timetz' THEN 92
                                             ELSE 1111
                                           END
                                    FROM   pg_type
                                    WHERE  oid = t.typbasetype)
         ELSE NULL
       END                                          AS base_type
FROM   pg_catalog.pg_type t,
       pg_catalog.pg_namespace n
WHERE  t.typnamespace = n.oid
       AND n.nspname != 'pg_catalog'
       AND n.nspname != 'pg_toast'
       AND t.typtype IN ( 'c', 'd' )
ORDER  BY data_type,
          type_schem,
          type_name
OCTO
  [[ "$(grep -c "ERROR" output.txt)" == "0" ]]
}

@test "select database version" {
  octo <<OCTO &> output.txt
SELECT version();
OCTO
  # For now, not crashing is considered acceptable; it seems likely that the version
  # will change often and I don't feel like updating this test all the time
}

@test "psql \\dt" {
  octo <<OCTO &> output.txt
 SELECT n.nspname                              AS "Schema",
       c.relname                              AS "Name",
       CASE c.relkind
         WHEN 'r' THEN 'table'
         WHEN 'v' THEN 'view'
         WHEN 'm' THEN 'materialized view'
         WHEN 'i' THEN 'index'
         WHEN 'S' THEN 'sequence'
         WHEN 's' THEN 'special'
         WHEN 'f' THEN 'foreign table'
         WHEN 'p' THEN 'table'
         WHEN 'I' THEN 'index'
       end                                    AS "Type",
       pg_catalog.Pg_get_userbyid(c.relowner) AS "Owner"
FROM   pg_catalog.pg_class c
       LEFT JOIN pg_catalog.pg_namespace n
              ON n.oid = c.relnamespace
WHERE  c.relkind IN ( 'r', 'p', 'v', 'm',
                      'S', 'f', '' )
       AND n.nspname <> 'pg_catalog'
       AND n.nspname <> 'information_schema'
       AND n.nspname !~ '^pg_toast'
       AND pg_catalog.Pg_table_is_visible(c.oid)
ORDER  BY 1,
          2;
OCTO
}

@test "squirrel SQL connect queries" {
  # This is needed for now
  export ydb_mstack_size=10000
  octo <<OCTO
SET extra_float_digits = 3;
OCTO

  octo <<OCTO
SET application_name = 'PostgreSQL JDBC Driver';
OCTO


  octo <<OCTO
select current_schema()
OCTO

  # Seems to only return a single row
  octo <<OCTO
 SELECT t.typlen
FROM   pg_catalog.pg_type t,
       pg_catalog.pg_namespace n
WHERE  t.typnamespace = n.oid
       AND t.typname = 'name'
       AND n.nspname = 'pg_catalog'
OCTO

  # Returns a single row with value 3332
  octo <<OCTO
 SELECT setting
FROM   pg_catalog.pg_settings
WHERE  NAME = 'max_index_keys'
OCTO


  # Gets additional keywords beyond just the known keywords, maybe?
  octo <<OCTO
 SELECT String_agg(word, ',')
FROM   pg_catalog.Pg_get_keywords()
WHERE  word <> ALL ('{a,abs,absolute,action,ada,add,admin,after,all,allocate,alter,always,and,any,are,array,as,asc,asensitive,assertion,assignment,asymmetric,at,atomic,attribute,attributes,authorization,avg,before,begin,bernoulli,between,bigint,binary,blob,boolean,both,breadth,by,c,call,called,cardinality,cascade,cascaded,case,cast,catalog,catalog_name,ceil,ceiling,chain,char,char_length,character,character_length,character_set_catalog,character_set_name,character_set_schema,characteristics,characters,check,checked,class_origin,clob,close,coalesce,cobol,code_units,collate,collation,collation_catalog,collation_name,collation_schema,collect,column,column_name,command_function,command_function_code,commit,committed,condition,condition_number,connect,connection_name,constraint,constraint_catalog,constraint_name,constraint_schema,constraints,constructors,contains,continue,convert,corr,corresponding,count,covar_pop,covar_samp,create,cross,cube,cume_dist,current,current_collation,current_date,current_default_transform_group,current_path,current_role,current_time,current_timestamp,current_transform_group_for_type,current_user,cursor,cursor_name,cycle,data,date,datetime_interval_code,datetime_interval_precision,day,deallocate,dec,decimal,declare,default,defaults,deferrable,deferred,defined,definer,degree,delete,dense_rank,depth,deref,derived,desc,describe,descriptor,deterministic,diagnostics,disconnect,dispatch,distinct,domain,double,drop,dynamic,dynamic_function,dynamic_function_code,each,element,else,end,end-exec,equals,escape,every,except,exception,exclude,excluding,exec,execute,exists,exp,external,extract,false,fetch,filter,final,first,float,floor,following,for,foreign,fortran,found,free,from,full,function,fusion,g,general,get,global,go,goto,grant,granted,group,grouping,having,hierarchy,hold,hour,identity,immediate,implementation,in,including,increment,indicator,initially,inner,inout,input,insensitive,insert,instance,instantiable,int,integer,intersect,intersection,interval,into,invoker,is,isolation,join,k,key,key_member,key_type,language,large,last,lateral,leading,left,length,level,like,ln,local,localtime,localtimestamp,locator,lower,m,map,match,matched,max,maxvalue,member,merge,message_length,message_octet_length,message_text,method,min,minute,minvalue,mod,modifies,module,month,more,multiset,mumps,name,names,national,natural,nchar,nclob,nesting,new,next,no,none,normalize,normalized,not,"null",nullable,nullif,nulls,number,numeric,object,octet_length,octets,of,old,on,only,open,option,options,or,order,ordering,ordinality,others,out,outer,output,over,overlaps,overlay,overriding,pad,parameter,parameter_mode,parameter_name,parameter_ordinal_position,parameter_specific_catalog,parameter_specific_name,parameter_specific_schema,partial,partition,pascal,path,percent_rank,percentile_cont,percentile_disc,placing,pli,position,power,preceding,precision,prepare,preserve,primary,prior,privileges,procedure,public,range,rank,read,reads,real,recursive,ref,references,referencing,regr_avgx,regr_avgy,regr_count,regr_intercept,regr_r2,regr_slope,regr_sxx,regr_sxy,regr_syy,relative,release,repeatable,restart,result,return,returned_cardinality,returned_length,returned_octet_length,returned_sqlstate,returns,revoke,right,role,rollback,rollup,routine,routine_catalog,routine_name,routine_schema,row,row_count,row_number,rows,savepoint,scale,schema,schema_name,scope_catalog,scope_name,scope_schema,scroll,search,second,section,security,select,self,sensitive,sequence,serializable,server_name,session,session_user,set,sets,similar,simple,size,smallint,some,source,space,specific,specific_name,specifictype,sql,sqlexception,sqlstate,sqlwarning,sqrt,start,state,statement,static,stddev_pop,stddev_samp,structure,style,subclass_origin,submultiset,substring,sum,symmetric,system,system_user,table,table_name,tablesample,temporary,then,ties,time,timestamp,timezone_hour,timezone_minute,to,top_level_count,trailing,transaction,transaction_active,transactions_committed,transactions_rolled_back,transform,transforms,translate,translation,treat,trigger,trigger_catalog,trigger_name,trigger_schema,trim,true,type,uescape,unbounded,uncommitted,under,union,unique,unknown,unnamed,unnest,update,upper,usage,user,user_defined_type_catalog,user_defined_type_code,user_defined_type_name,user_defined_type_schema,using,value,values,var_pop,var_samp,varchar,varying,view,when,whenever,where,width_bucket,window,with,within,without,work,write,year,zone}'::text[])
OCTO

  # Returns a list of data type names (bool, int, char ...)
  octo <<OCTO
 SELECT t.typname
FROM   pg_catalog.pg_type t
       JOIN pg_catalog.pg_namespace n
         ON ( t.typnamespace = n.oid )
WHERE  n.nspname != 'pg_toast'
       AND typelem = 0
       AND typrelid = 0
OCTO

  # Return value is 3 rows, information_scema, pg_catalog, public
  # Query truncated?
  octo <<OCTO
 SELECT   nspname AS table_schem,
         NULL    AS table_catalog
FROM     pg_catalog.pg_namespace
WHERE    nspname <> 'pg_toast'
AND      (
                  nspname !~ '^pg_temp_'
         OR       nspname = (pg_catalog.Current_schemas(true))[1])
AND      (
                  nspname !~ '^pg_toast_temp_'
         OR       nspname = replace((pg_catalog.current_schemas(true))[1], 'pg_temp_', 'pg_toast_temp_'))
ORDER BY table_schem
OCTO

  # Returns value is 1 row
  # Query truncated?
  octo <<OCTO
 SELECT c.oid,
       a.attnum,
       a.attname,
       c.relname,
       n.nspname,
       a.attnotnull
        OR ( t.typtype = 'd'
             AND t.typnotnull ),
       a.attidentity != ''
        OR pg_catalog.Pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%'
FROM   pg_catalog.pg_class c
       JOIN pg_catalog.pg_namespace n
         ON ( c.relnamespace = n.oid )
       JOIN pg_catalog.pg_attribute a
         ON ( c.oid = a.attrelid )
       JOIN pg_catalog.pg_type t
         ON ( a.atttypid = t.oid )
       LEFT JOIN pg_catalog.pg_attrdef d
              ON ( d.adrelid = a.attrelid
                   AND d.adnum = a.attnum )
       JOIN (SELECT 2615 AS oid,
                    1    AS attnum) vals
         ON ( c.oid = vals.oid
              AND a.attnum = vals.attnum )
OCTO

  # Returns information_schema, pg_catalog, public
  # Truncated query
  octo <<OCTO
 SELECT   nspname AS table_schem,
         NULL    AS table_catalog
FROM     pg_catalog.pg_namespace
WHERE    nspname <> 'pg_toast'
AND      (
                  nspname !~ '^pg_temp_'
         OR       nspname = (pg_catalog.Current_schemas(true))[1])
AND      (
                  nspname !~ '^pg_toast_temp_'
         OR       nspname = replace((pg_catalog.current_schemas(true))[1], 'pg_temp_', 'pg_toast_temp_'))
ORDER BY table_schem
OCTO

  # Returns a list of tables from the information schema
  # Query truncated?
  octo <<OCTO
 SELECT NULL          AS TABLE_CAT,
       n.nspname     AS TABLE_SCHEM,
       c.relname     AS TABLE_NAME,
       CASE n.nspname ~ '^pg_'
             OR n.nspname = 'information_schema'
         WHEN true THEN
           CASE
             WHEN n.nspname = 'pg_catalog'
                   OR n.nspname = 'information_schema' THEN
               CASE c.relkind
                 WHEN 'r' THEN 'SYSTEM TABLE'
                 WHEN 'v' THEN 'SYSTEM VIEW'
                 WHEN 'i' THEN 'SYSTEM INDEX'
                 ELSE NULL
               end
             WHEN n.nspname = 'pg_toast' THEN
               CASE c.relkind
                 WHEN 'r' THEN 'SYSTEM TOAST TABLE'
                 WHEN 'i' THEN 'SYSTEM TOAST INDEX'
                 ELSE NULL
               end
             ELSE
               CASE c.relkind
                 WHEN 'r' THEN 'TEMPORARY TABLE'
                 WHEN 'p' THEN 'TEMPORARY TABLE'
                 WHEN 'i' THEN 'TEMPORARY INDEX'
                 WHEN 'S' THEN 'TEMPORARY SEQUENCE'
                 WHEN 'v' THEN 'TEMPORARY VIEW'
                 ELSE NULL
               end
           end
         WHEN false THEN
           CASE c.relkind
             WHEN 'r' THEN 'TABLE'
             WHEN 'p' THEN 'TABLE'
             WHEN 'i' THEN 'INDEX'
             WHEN 'S' THEN 'SEQUENCE'
             WHEN 'v' THEN 'VIEW'
             WHEN 'c' THEN 'TYPE'
             WHEN 'f' THEN 'FOREIGN TABLE'
             WHEN 'm' THEN 'MATERIALIZED VIEW'
             ELSE NULL
           end
         ELSE NULL
       end           AS TABLE_TYPE,
       d.description AS REMARKS,
       ''            AS TYPE_CAT,
       ''            AS TYPE_SCHEM,
       ''            AS TYPE_NAME,
       ''            AS SELF_REFERENCING_COL_NAME,
       ''            AS REF_GENERATION
FROM   pg_catalog.pg_namespace n,
       pg_catalog.pg_class c
       LEFT JOIN pg_catalog.pg_description d
              ON ( c.oid = d.objoid
                   AND d.objsubid = 0 )
       LEFT JOIN pg_catalog.pg_class dc
              ON ( d.classoid = dc.oid
                   AND dc.relname = 'pg_class' )
       LEFT JOIN pg_catalog.pg_namespace dn
              ON ( dn.oid = dc.relnamespace
                   AND dn.nspname = 'pg_catalog' )
WHERE  c.relnamespace = n.oid
       AND n.nspname LIKE 'information_schema'
       AND ( false
              OR ( c.relkind IN ( 'r', 'p' )
                   AND n.nspname !~ '^pg_'
                   AND n.nspname <> 'information_schema' )
              OR ( c.relkind = 'r'
                   AND ( n.nspname = 'pg_catalog'
                          OR n.nspname = 'information_schema' ) ) )
ORDER  BY table_type,
          table_schem,
          table_name
OCTO


  # Returns a list of system tables
  octo <<OCTO
 SELECT NULL          AS TABLE_CAT,
       n.nspname     AS TABLE_SCHEM,
       c.relname     AS TABLE_NAME,
       CASE n.nspname ~ '^pg_'
             OR n.nspname = 'information_schema'
         WHEN true THEN
           CASE
             WHEN n.nspname = 'pg_catalog'
                   OR n.nspname = 'information_schema' THEN
               CASE c.relkind
                 WHEN 'r' THEN 'SYSTEM TABLE'
                 WHEN 'v' THEN 'SYSTEM VIEW'
                 WHEN 'i' THEN 'SYSTEM INDEX'
                 ELSE NULL
               end
             WHEN n.nspname = 'pg_toast' THEN
               CASE c.relkind
                 WHEN 'r' THEN 'SYSTEM TOAST TABLE'
                 WHEN 'i' THEN 'SYSTEM TOAST INDEX'
                 ELSE NULL
               end
             ELSE
               CASE c.relkind
                 WHEN 'r' THEN 'TEMPORARY TABLE'
                 WHEN 'p' THEN 'TEMPORARY TABLE'
                 WHEN 'i' THEN 'TEMPORARY INDEX'
                 WHEN 'S' THEN 'TEMPORARY SEQUENCE'
                 WHEN 'v' THEN 'TEMPORARY VIEW'
                 ELSE NULL
               end
           end
         WHEN false THEN
           CASE c.relkind
             WHEN 'r' THEN 'TABLE'
             WHEN 'p' THEN 'TABLE'
             WHEN 'i' THEN 'INDEX'
             WHEN 'S' THEN 'SEQUENCE'
             WHEN 'v' THEN 'VIEW'
             WHEN 'c' THEN 'TYPE'
             WHEN 'f' THEN 'FOREIGN TABLE'
             WHEN 'm' THEN 'MATERIALIZED VIEW'
             ELSE NULL
           end
         ELSE NULL
       end           AS TABLE_TYPE,
       d.description AS REMARKS,
       ''            AS TYPE_CAT,
       ''            AS TYPE_SCHEM,
       ''            AS TYPE_NAME,
       ''            AS SELF_REFERENCING_COL_NAME,
       ''            AS REF_GENERATION
FROM   pg_catalog.pg_namespace n,
       pg_catalog.pg_class c
       LEFT JOIN pg_catalog.pg_description d
              ON ( c.oid = d.objoid
                   AND d.objsubid = 0 )
       LEFT JOIN pg_catalog.pg_class dc
              ON ( d.classoid = dc.oid
                   AND dc.relname = 'pg_class' )
       LEFT JOIN pg_catalog.pg_namespace dn
              ON ( dn.oid = dc.relnamespace
                   AND dn.nspname = 'pg_catalog' )
WHERE  c.relnamespace = n.oid
       AND n.nspname LIKE 'pg_catalog'
       AND ( false
              OR ( c.relkind IN ( 'r', 'p' )
                   AND n.nspname !~ '^pg_'
                   AND n.nspname <> 'information_schema' )
              OR ( c.relkind = 'r'
                   AND ( n.nspname = 'pg_catalog'
                          OR n.nspname = 'information_schema' ) ) )
ORDER  BY table_type,
          table_schem,
          table_name
OCTO


  # Returns a list of user defined tables
  octo <<OCTO
 SELECT NULL          AS TABLE_CAT,
       n.nspname     AS TABLE_SCHEM,
       c.relname     AS TABLE_NAME,
       CASE n.nspname ~ '^pg_'
             OR n.nspname = 'information_schema'
         WHEN true THEN
           CASE
             WHEN n.nspname = 'pg_catalog'
                   OR n.nspname = 'information_schema' THEN
               CASE c.relkind
                 WHEN 'r' THEN 'SYSTEM TABLE'
                 WHEN 'v' THEN 'SYSTEM VIEW'
                 WHEN 'i' THEN 'SYSTEM INDEX'
                 ELSE NULL
               end
             WHEN n.nspname = 'pg_toast' THEN
               CASE c.relkind
                 WHEN 'r' THEN 'SYSTEM TOAST TABLE'
                 WHEN 'i' THEN 'SYSTEM TOAST INDEX'
                 ELSE NULL
               end
             ELSE
               CASE c.relkind
                 WHEN 'r' THEN 'TEMPORARY TABLE'
                 WHEN 'p' THEN 'TEMPORARY TABLE'
                 WHEN 'i' THEN 'TEMPORARY INDEX'
                 WHEN 'S' THEN 'TEMPORARY SEQUENCE'
                 WHEN 'v' THEN 'TEMPORARY VIEW'
                 ELSE NULL
               end
           end
         WHEN false THEN
           CASE c.relkind
             WHEN 'r' THEN 'TABLE'
             WHEN 'p' THEN 'TABLE'
             WHEN 'i' THEN 'INDEX'
             WHEN 'S' THEN 'SEQUENCE'
             WHEN 'v' THEN 'VIEW'
             WHEN 'c' THEN 'TYPE'
             WHEN 'f' THEN 'FOREIGN TABLE'
             WHEN 'm' THEN 'MATERIALIZED VIEW'
             ELSE NULL
           end
         ELSE NULL
       end           AS TABLE_TYPE,
       d.description AS REMARKS,
       ''            AS TYPE_CAT,
       ''            AS TYPE_SCHEM,
       ''            AS TYPE_NAME,
       ''            AS SELF_REFERENCING_COL_NAME,
       ''            AS REF_GENERATION
FROM   pg_catalog.pg_namespace n,
       pg_catalog.pg_class c
       LEFT JOIN pg_catalog.pg_description d
              ON ( c.oid = d.objoid
                   AND d.objsubid = 0 )
       LEFT JOIN pg_catalog.pg_class dc
              ON ( d.classoid = dc.oid
                   AND dc.relname = 'pg_class' )
       LEFT JOIN pg_catalog.pg_namespace dn
              ON ( dn.oid = dc.relnamespace
                   AND dn.nspname = 'pg_catalog' )
WHERE  c.relnamespace = n.oid
       AND n.nspname LIKE 'public'
       AND ( false
              OR ( c.relkind IN ( 'r', 'p' )
                   AND n.nspname !~ '^pg_'
                   AND n.nspname <> 'information_schema' )
              OR ( c.relkind = 'r'
                   AND ( n.nspname = 'pg_catalog'
                          OR n.nspname = 'information_schema' ) ) )
ORDER  BY table_type,
          table_schem,
          table_name
OCTO

  # Returns information_schema, pg_catalog, public
  octo <<OCTO
 SELECT   nspname AS table_schem,
         NULL    AS table_catalog
FROM     pg_catalog.pg_namespace
WHERE    nspname <> 'pg_toast'
AND      (
                  nspname !~ '^pg_temp_'
         OR       nspname = (pg_catalog.Current_schemas(true))[1])
AND      (
                  nspname !~ '^pg_toast_temp_'
         OR       nspname = replace((pg_catalog.current_schemas(true))[1], 'pg_temp_', 'pg_toast_temp_'))
ORDER BY table_schem
OCTO

  # Returns information_schema, pg_catalog, public
  # ORDER BY not working, but gives right answer
  octo <<OCTO
 SELECT   nspname AS table_schem,
         NULL    AS table_catalog
FROM     pg_catalog.pg_namespace
WHERE    nspname <> 'pg_toast'
AND      (
                  nspname !~ '^pg_temp_'
         OR       nspname = (pg_catalog.Current_schemas(true))[1])
AND      (
                  nspname !~ '^pg_toast_temp_'
         OR       nspname = replace((pg_catalog.current_schemas(true))[1], 'pg_temp_', 'pg_toast_temp_'))
ORDER BY table_schem
OCTO
}

@test "verify that OIDs are lined up for namespaces" {
  export ydb_mstack_size=10000
  octo <<OCTO &>output.txt
select c.relnamespace, n.oid from pg_catalog.pg_namespace n, pg_catalog.pg_class c
WHERE n.oid = c.relnamespace;
OCTO
  [[ $(grep -c "|" output.txt) -gt 0 ]]


  # Returns a list of all the columns for the given table
  octo <<OCTO
 SELECT   *
FROM     (
                   SELECT    n.nspname,
                             c.relname,
                             a.attname,
                             a.atttypid,
                             a.attnotnull
                   or        (
                                       t.typtype = 'd'
                             AND       t.typnotnull) AS attnotnull,
                             a.atttypmod,
                             a.attlen,
                             row_number() OVER (partition BY a.attrelid ORDER BY a.attnum) AS attnum,
                             NULL                                                          AS attidentity,
                             pg_catalog.pg_get_expr(def.adbin, def.adrelid)                AS adsrc,
                             dsc.description,
                             t.typbasetype,
                             t.typtype
                   FROM      pg_catalog.pg_namespace n
                   JOIN      pg_catalog.pg_class c
                   ON        (
                                       c.relnamespace = n.oid)
                   JOIN      pg_catalog.pg_attribute a
                   ON        (
                                       a.attrelid=c.oid)
                   JOIN      pg_catalog.pg_type t
                   ON        (
                                       a.atttypid = t.oid)
                   LEFT JOIN pg_catalog.pg_attrdef def
                   ON        (
                                       a.attrelid=def.adrelid
                             AND       a.attnum = def.adnum)
                   LEFT JOIN pg_catalog.pg_description dsc
                   ON        (
                                       c.oid=dsc.objoid
                             AND       a.attnum = dsc.objsubid)
                   LEFT JOIN pg_catalog.pg_class dc
                   ON        (
                                       dc.oid=dsc.classoid
                             AND       dc.relname='pg_class')
                   LEFT JOIN pg_catalog.pg_namespace dn
                   ON        (
                                       dc.relnamespace=dn.oid
                             AND       dn.nspname='pg_catalog')
                   WHERE     c.relkind IN ('r',
                                           'p',
                                           'v',
                                           'f',
                                           'm')
                   AND       a.attnum > 0
                   AND       NOT a.attisdropped
                   AND       n.nspname LIKE 'public'
                   AND       c.relname LIKE 'names') c
WHERE    true
AND      attname LIKE '%'
ORDER BY nspname,
         c.relname,
         attnum
OCTO
}
