load test_helpers

setup() {
  init_test
  createdb
  load_fixture names.sql
  load_fixture names.zwr
}

@test "get oids" {
  octo <<OCTO &> output.txt
SELECT t.typlen
FROM pg_catalog.pg_type t, pg_catalog.pg_namespace n
WHERE t.typnamespace=n.oid AND t.typname='name' AND n.nspname='pg_catalog'
OCTO
  [[ "$(grep -c "ERROR" output.txt)" == "0" ]]
}

@test "get relkind" {
  ## TODO: this is actually really hard because we make a reference to a table
  ##  out of scope in the subquery; for now, skip it
  skip
  octo <<OCTO &> output.txt
SELECT t.typname,t.oid
FROM pg_catalog.pg_type t
  JOIN pg_catalog.pg_namespace n
  ON (t.typnamespace = n.oid)
WHERE n.nspname  != 'pg_toast'
  AND (t.typrelid = 0 OR 
    (SELECT c.relkind = 'c' FROM pg_catalog.pg_class c WHERE c.oid = t.typrelid))
OCTO
  [[ "$(grep -c "ERROR" output.txt)" == "0" ]]
}

@test "get tables" {
  octo <<OCTO &> output.txt
SELECT 
  NULL AS TABLE_CAT, 
  n.nspname AS TABLE_SCHEM, 
  c.relname AS TABLE_NAME, 
  CASE n.nspname ~ '^pg_' 
  OR n.nspname = 'information_schema' WHEN true THEN CASE WHEN n.nspname = 'pg_catalog' 
  OR n.nspname = 'information_schema' THEN CASE c.relkind WHEN 'r' THEN 'SYSTEM TABLE' WHEN 'v' THEN 'SYSTEM VIEW' WHEN 'i' THEN 'SYSTEM INDEX' ELSE NULL END WHEN n.nspname = 'pg_toast' THEN CASE c.relkind WHEN 'r' THEN 'SYSTEM TOAST TABLE' WHEN 'i' THEN 'SYSTEM TOAST INDEX' ELSE NULL END ELSE CASE c.relkind WHEN 'r' THEN 'TEMPORARY TABLE' WHEN 'p' THEN 'TEMPORARY TABLE' WHEN 'i' THEN 'TEMPORARY INDEX' WHEN 'S' THEN 'TEMPORARY SEQUENCE' WHEN 'v' THEN 'TEMPORARY VIEW' ELSE NULL END END WHEN false THEN CASE c.relkind WHEN 'r' THEN 'TABLE' WHEN 'p' THEN 'TABLE' WHEN 'i' THEN 'INDEX' WHEN 'S' THEN 'SEQUENCE' WHEN 'v' THEN 'VIEW' WHEN 'c' THEN 'TYPE' WHEN 'f' THEN 'FOREIGN TABLE' WHEN 'm' THEN 'MATERIALIZED VIEW' ELSE NULL END ELSE NULL END AS TABLE_TYPE, 
  d.description AS REMARKS, 
  '' as TYPE_CAT, 
  '' as TYPE_SCHEM, 
  '' as TYPE_NAME, 
  '' AS SELF_REFERENCING_COL_NAME, 
  '' AS REF_GENERATION 
FROM 
  pg_catalog.pg_namespace n, 
  pg_catalog.pg_class c 
  LEFT JOIN pg_catalog.pg_description d ON (
    c.oid = d.objoid 
    AND d.objsubid = 0
  ) 
  LEFT JOIN pg_catalog.pg_class dc ON (
    d.classoid = dc.oid 
    AND dc.relname = 'pg_class'
  ) 
  LEFT JOIN pg_catalog.pg_namespace dn ON (
    dn.oid = dc.relnamespace 
    AND dn.nspname = 'pg_catalog'
  ) 
WHERE 
  c.relnamespace = n.oid 
  AND (
    false 
    OR (
      c.relkind IN ('r', 'p') 
      AND n.nspname ! ~ '^pg_' 
      AND n.nspname <> 'information_schema'
    ) 
    OR (
      c.relkind = 'r' 
      AND (
        n.nspname = 'pg_catalog' 
        OR n.nspname = 'information_schema'
      )
    ) 
    OR (
      c.relkind = 'v' 
      AND n.nspname <> 'pg_catalog' 
      AND n.nspname <> 'information_schema'
    )
  ) 
ORDER BY 
  TABLE_TYPE, 
  TABLE_SCHEM, 
  TABLE_NAME
OCTO
  [[ "$(grep -c "ERROR" output.txt)" == "0" ]]
}
