#################################################################
#								#
# Copyright (c) 2019 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture names.sql
  load_fixture names.zwr
}

@test "inner join with simple ON condition" {
  octo >& output.txt <<OCTO
select * from names as t1 inner join names as t2
on (t1.id = t2.id);
OCTO
  run cat output.txt
  [[ "$output" =~ "0|Zero|Cool|0|Zero|Cool" ]]
  ! [[ "$output" =~ "0|Zero|Cool|1|Acid|Burn" ]]
}

@test "inner join with a table against itself with no ON condition" {
  octo <<OCTO &> output.txt
CREATE TABLE Orders (OrderID INTEGER PRIMARY KEY, CustomerID INTEGER, EmployeeID INTEGER, OrderDate VARCHAR(16), ShipperID INTEGER);
select o.ShipperID from Orders
inner join Orders o
where Orders.EmployeeID = o.ShipperID and o.ShipperID = 3;
OCTO
  # no crash is a success for this test
}

@test "inner join with a table against itself with no alias on one of the names" {
  octo <<OCTO &> output.txt
CREATE TABLE Orders (OrderID INTEGER PRIMARY KEY, CustomerID INTEGER, EmployeeID INTEGER, OrderDate VARCHAR(16), ShipperID INTEGER);
select o.ShipperID from Orders
inner join Orders o
on Orders.EmployeeID = o.ShipperID where o.ShipperID = 3;
OCTO
  # no crash is a success for this test
}

@test "inner join where ordered joined is inverse of the fix" {
  octo <<OCTO &> output.txt
CREATE TABLE customers (customer_id INTEGER PRIMARY KEY, first_name VARCHAR(30), last_name VARCHAR(30), email VARCHAR(64), address VARCHAR(128), city VARCHAR(32), state VARCHAR(2), zipcode VARCHAR(10));
CREATE TABLE orders (order_id INTEGER PRIMARY KEY, order_date VARCHAR(30), order_amount VARCHAR(30), customer_id INTEGER);
SELECT * FROM orders as o
INNER JOIN customers AS c
ON c.customer_id = o.customer_id;
OCTO
  # no crash is a success for this test
}
