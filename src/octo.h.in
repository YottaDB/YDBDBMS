#ifndef OCTO_H
#define OCTO_H

#include <stdio.h>

#include "errors.h"
#include "octo_types.h"

#define OCTO_SQL_MAJOR_VERSION @OCTO_SQL_MAJOR_VERSION@
#define OCTO_SQL_MINOR_VERSION @OCTO_SQL_MINOR_VERSION@


#define MAX_STR_CONST @STRING_BUFFER_LENGTH@
#define MAX_EXPRESSION_LENGTH @MAX_EXPRESSION_LENGTH@

/**
 * Returns the column containing the primary key for this table
 *
 * @param [in] table to search
 */
SqlColumn *fetch_primary_key_column(const SqlTable *table);

void emit_simple_select(char *output, const SqlTable *table, const char *column, char *source);
void emit_create_table(FILE *output, struct SqlStatement *stmt);
void emit_select_statement(FILE *output, SqlStatement *stmt);

void cleanup_sql_statement(SqlStatement *stmt);
/**
 * Examines the table to make sure needed columns are specified, and fills out
 * any that are needed but not present.
 *
 * @returns 0 if success, 1 otherwise
 */
int create_table_defaults(SqlStatement *table_statement, SqlStatement *keywords_statement);

char *m_escape_string(const char *string);
char *m_unescape_string(const char *string);

int readline_getc(FILE *inputFile, char *buff, int size);

/* Globals */
SqlTable *definedTables;
char input_buffer_combined[MAX_STR_CONST];
OctoConfig *config;

#endif
